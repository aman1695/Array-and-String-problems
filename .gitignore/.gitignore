///////////////////////////////////////////////////////////////////////Reverse String/////////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String str = in.nextLine();
		String s = reverse(str);
		System.out.println(s);
	}
	static String reverse(String str){
	    String s = "";
	    if(str.length() == 1){
	        return str;
	    }
	    for(int i = str.length()-1;i>=0;i--){
	        char c = str.charAt(i);
	        s+=c;
	    }
	    return s;
	}
}
////////////////////////////////Implement an algorithm to determine if a string has all unique characters./////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String str = in.nextLine();
		String s = TrueorFalse(str);
		System.out.println(s);
	}
	static String TrueorFalse(String str){
	    String y = "Yes";
	    String n = "No";
	    for(int i=0; i<str.length();i++){
	        char c = str.charAt(i);
	        if((c>='A'&&c<='Z')||(c>='a'&&c<='z')){
	            return n;
	        }
	    }
	    return y;
	}
}
//////////////////////////////////////Given two strings, write a method to decide if one is a permutation of the other./////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String str1 = in.nextLine();
		String str2 = in.nextLine();
		String s = TrueorFalse(str1,str2);
		System.out.println(s);
	}
	static String TrueorFalse(String str1,String str2){
	    String y = "Yes";
	    String n = "No";
	    if(str1.length()!=str2.length()){
	        return n;
	    }
	    char[] s1 = str1.toCharArray();
        char[] s2 = str2.toCharArray();

        Arrays.sort(s1);
        Arrays.sort(s2);
        if(Arrays.equals(s1, s2)){
            return y;
        }else{
            return n;
        }
	}
}
///////////////////////////////////////////////////////////////////////Reverse sentence/////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String str = in.nextLine();
		String s ="";
		String str1 = reverse(s,str,0,str.length());
		char[] str2 = str1.toCharArray();
		int j=0;
		s="";
		for(int i=1; i<str2.length; i++){
		    if(str2[i] == ' '){
		        s = reverse(s,str1,j,i);
		        j=i+1;
		        i++;
		    }if(i==str2.length-1){
		        s = reverse(s,str1,j,i+1);
		    }
		}
		System.out.println(s);
	}
	static String reverse(String s, String str, int i, int j){
	    if(str.length() == 1){
	        return str;
	    }
	    for(int k = j-1;k>=i;k--){
	        char c = str.charAt(k);
	        s+=c;
	    }
	    s+=' ';
	    return s;
	}
}
////////////////////////////////////////Write a method to replace all spaces in a string with'%20'////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String s = in.nextLine();
		String str = removeSpase(s);
		System.out.println(str.lang());
	}
	static String removeSpase(String s){
	    String str = "";
	    String str1 = "%20";
	    for(int i=0; i<s.length(); i++){
	        char c = s.charAt(i);
	        if(c == ' '){
	            str+=str1;
	        }else{
	            str+=c;
	        }
	    }
	    return str;
	}
}
////////////////Implement a method to perform basic string compression using the counts of repeated characters/////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		String s = in.nextLine();
		String str = repeatedString(s);
		System.out.println(str);
	}
	static String repeatedString(String s){
	    String str = "";
	    int count = 1;
	    char c = s.charAt(0);	
		for(int i = 1; i < s.length(); i++) {
			if(s.charAt(i) == c){
			    count++;
			}	
			else {
				str += c;
				str += Integer.toString(count);
				c = s.charAt(i);	
				count = 1;
			}
		}	
		str += c;
		str += Integer.toString(count);
		if(str.length() < s.length()){
		    return str;
		}else{
		    return s;
		}
		
    }

}
/////////Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0///////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		int n = in.nextInt();
		int[][] A = new int[m][n];
		int a =-1;
		int b=-1;
		for(int i=0; i<m; i++){
		    for(int j=0; j<n; j++){
		        A[i][j]  = in.nextInt();
		        if(A[i][j] == 0){
		            a = i;
		            b = j;
		        }
		    }
		}
		for(int i=0; i<m; i++){
		    for(int j=0; j<n; j++){
		        if(i==a||j==b){
		            A[i][j] = 0;
		        }
		        System.out.print(A[i][j] + " ");
		    }
		    System.out.println();
		}
		
    }

}
/////////////////////////////////////////////////Next greater number which is power of 2./////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int i=1; i<1000000; i+=i){
		    if(i>m){
		        System.out.println(i);
		        break;
		    }
		}
		
    }

}
///////////////////////////////Partition array such that all even number on one side and odd number other side///////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		int[] a = new int[m];
		for(int i=0; i<m; i++){
		    a[i] = in.nextInt();
		}
		int[] b = new int[m];
		int j=0;
		for(int i=0; i<a.length; i++){
		    if(a[i]%2 != 0){
		        b[j] = a[i];
		        j++;
		    }
		}
		for(int i=0; i<a.length; i++){
		    if(a[i]%2 == 0){
		        b[j] = a[i];
		        j++;
		    }
		}
		for(int i=0; i<b.length; i++){
		    System.out.print(b[i] + " ");
		}
		
    }

}
///////////////////////////////////////////////////Kth smallest Element in Array//////////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		int n = in.nextInt();
		int[] a = new int[m];
		for(int i=0; i<m; i++){
		    a[i] = in.nextInt();
		}
		TreeSet<Integer>set = new TreeSet<>();
		for(int i=0; i<a.length; i++){
		    set.add(a[i]);
		}
		int j=1;
		while(j!=n){
		    set.pollFirst();
		    j++;
		}
		int min = set.pollFirst();
		System.out.println(n +"th lowest element is: " + min);
		
    }

}
////////////////////////////////////////////////////////Merge 2 sorted array//////////////////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		int n = in.nextInt();
		int[] a = new int[m];
		for(int i=0; i<m; i++){
		    a[i] = in.nextInt();
		}
		int[] b = new int[n];
		for(int i=0; i<n; i++){
		    b[i] = in.nextInt();
		}
		TreeSet<Integer>set = new TreeSet<>();
		for(int i=0; i<a.length; i++){
		    set.add(a[i]);
		}
		for(int i=0; i<b.length; i++){
		    set.add(b[i]);
		}
		int[] output = new int[a.length+b.length];
		for(int i=0; i<output.length; i++){
		    output[i] = set.pollFirst();
		    System.out.print(output[i] + " ");
		}
		
    }

}
///Find one missing element for given n element. given array contains 1-n number but one number is missing find that. What if 2 numbers are missing/////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		int a[] = {1,2,3,4,5,7,8,9,11,12};
		for(int i=0; i<a.length; i++){
		    if(i==a.length-1){
		        break;
		    }else if(a[i] != a[i+1]-1){
		        System.out.println(a[i]+1);
		    }
		}
		
    }

}
/////////////////////How to find GCD(Greatest Common Divisor) of two numbers///////////////////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int num1 = in.nextInt();
		int num2 = in.nextInt();
		int gcd = 0 ;
		for(int i=1; i<=num1 && i<=num2; i++){
		    if(num1%i == 0 && num2%i == 0){
		        gcd = i;
		    }
		}
		System.out.println(gcd);
		
    }

}
////////////////////////////How to find GCD(Greatest Common Divisor) of two numbers using recursion////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int num1 = in.nextInt();
		int num2 = in.nextInt();
		int gcd = GCD(num1,num2);
		System.out.println(gcd);
		
    }
    public static int GCD(int num1, int num2)
    {
        if (num2 != 0)
            return GCD(num2, num1 % num2);
        else
            return num1;
    }

}
//////////////////////////////////////////////////////////Matrix Addition/////////////////////////////////////////////////////////////////////////////
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner in = new Scanner(System.in);
		int a[][] = {{1,2,3},{4,5,6},{7,8,9}};
		int b[][] = {{1,2,3},{4,5,6},{7,8,9}};
		for(int i=0; i<a.length; i++){
		    for(int j=0; j<a[0].length; j++){
		        a[i][j] += b[i][j];
		        System.out.print(a[i][j] + " ");
		    }
		    System.out.println();
		}
    }

}
